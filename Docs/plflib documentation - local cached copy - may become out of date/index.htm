<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="description"
  content="PLF C++ Library">
  <meta name="keywords"
  content="C++, C, vector, PLF, colony, stack, STL, containers, optimize, performance, pointer, iterator, invalidation">
  <title>PLF C++ Library</title>
  <link rel="stylesheet" type="text/css" href="style.css">
</head>

<body>
<h1>PLF C++ Library</h1>

<p>PLF is a collection of library modules for C++. At this stage I am only releasing plf::colony and plf::stack, container class templates similar in usage to STL's std::vector and std::stack template but with fewer performance issues and without pointer/iterator invalidation. Please click on the links below to learn more about them and download. More library modules will come in time. All modules are under a <a href="http://en.wikipedia.org/wiki/Zlib_License">Zlib permissive license</a> and support both C++11 and C++0x. Tested compilers include Clang 3.61, GCC 4.6, 4.7, 4.8, 4.9 and 5.1 (both 32-bit and 64-bit), MS Visual C++ 2010, 2013 and 2015.</p>
<br>
<br>

<p><a href="colony.htm"><strong>plf::colony
</strong></a> - A random-access/random-erase vector-like container class with better performance for larger-than-scalar types and no iterator/pointer invalidation.</p>

<p><a href="stack.htm"><strong>plf::stack</strong></a> - A container class similar to the STL std::stack container with better overall performance and no iterator/pointer invalidation.</p>
<br>
<br>

<p>Contact: <img src="footer.gif" valign="bottom"><br>
plf:: library and this site Copyright (c) 2015, Matthew Bentley</p>
</body>
</html>
